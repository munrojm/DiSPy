#!/usr/bin/env python
import argparse
import numpy as np

from DiSPy import init, path, dg_elements,     \
                  dg_elements_std,     \
                  irr_mat, perturb, vec_util, \
                  op_id_utils, output, dist_name

parser = argparse.ArgumentParser()
parser.add_argument("input_file")
args = parser.parse_args()
input_dir = args.input_file


# -- Initialize global variables object
init_vars = init.in_var(input_dir)

# -- Initialize path object
in_path = path.make_path(init_vars.numIm)

# -- Obtain images in ASE object format
in_path.set_images(init_vars.get_images())

# -- Obtain elements of the DG (inputted basis)
dg_elements.get_DG(in_path,init_vars)

# -- Print out DG operations in the format of Bilbao's IDENTIFY GROUP
op_id_utils.groupBB(in_path,init_vars)

# -- Obtain elements of the DG (std. basis)
dg_elements_std.get_DG_std(in_path,init_vars)

# -- Obtain name of distortion group (seg. faults
# at this point indicate tol. value is off)

iso_sg_name = dist_name.get_dist_name(in_path,init_vars)

# -- Print possible irreps from the listing of Stokes et al.
irr_mat.print_irreps(iso_sg_name, init_vars)


if init_vars.perturb:
    # -- New path object for perturbed path
    p_path = path.make_path(init_vars.numIm)

    # -- Obtain irrep. matrices
    irreps = irr_mat.get_irreps(in_path,init_vars)

    # -- Generate and apply perturbation to obtain new images
    images_p = perturb.gen_perturb(in_path,irreps,init_vars)

    p_path.set_images(images_p)

    # -- Obtain elements of NEW DG (inputted basis)
    dg_elements.get_DG(p_path, init_vars)

    # -- Obtain elements of the NEW DG (std. Basis)
    dg_elements_std.get_DG_std(p_path,init_vars)

    # -- Obtain NEW distortion group name (seg. faults
    # at this point indicate tol. value is off)
    dist_name.get_dist_name(p_path,init_vars)

    # -- Output images and generate distortion movie files
    output.o_images(in_path,p_path,init_vars)

else:
    # -- Output images and generate distortion movie files
    output.o_images(in_path,in_path,init_vars)
